{"version":3,"sources":["_createFind.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,cAAc,QAAQ,eAAR,CADlB;AAAA,IAEI,OAAO,QAAQ,QAAR,CAFX;;AAIA;;;;;;;AAOA,SAAS,UAAT,CAAoB,aAApB,EAAmC;AACjC,SAAO,UAAU,UAAV,EAAsB,SAAtB,EAAiC,SAAjC,EAA4C;AACjD,QAAI,WAAW,OAAO,UAAP,CAAf;AACA,QAAI,CAAC,YAAY,UAAZ,CAAL,EAA8B;AAC5B,UAAI,WAAW,aAAa,SAAb,EAAwB,CAAxB,CAAf;AACA,mBAAa,KAAK,UAAL,CAAb;AACA,kBAAY,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AAClC,eAAO,SAAS,SAAS,GAAT,CAAT,EAAwB,GAAxB,EAA6B,QAA7B,CAAP;AACD,OAFD;AAGD;AACD,QAAI,QAAQ,cAAc,UAAd,EAA0B,SAA1B,EAAqC,SAArC,CAAZ;AACA,WAAO,QAAQ,CAAC,CAAT,GAAa,SAAS,WAAW,WAAW,KAAX,CAAX,GAA+B,KAAxC,CAAb,GAA8D,SAArE;AACD,GAXD;AAYD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_createFind-compiled.js","sourcesContent":["'use strict';\n\nvar baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;"]}