{"version":3,"sources":["_baseIsRegExp.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;AACA,IAAI,YAAY,iBAAhB;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;;;;;AAKA,IAAI,iBAAiB,YAAY,QAAjC;;AAEA;;;;;;;AAOA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,SAAO,SAAS,KAAT,KAAmB,eAAe,IAAf,CAAoB,KAApB,KAA8B,SAAxD;AACD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"_baseIsRegExp-compiled.js","sourcesContent":["'use strict';\n\nvar isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObject(value) && objectToString.call(value) == regexpTag;\n}\n\nmodule.exports = baseIsRegExp;"]}