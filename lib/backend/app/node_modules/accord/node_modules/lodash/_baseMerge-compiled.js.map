{"version":3,"sources":["_baseMerge.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AAAA,IACI,mBAAmB,QAAQ,qBAAR,CADvB;AAAA,IAEI,UAAU,QAAQ,YAAR,CAFd;AAAA,IAGI,gBAAgB,QAAQ,kBAAR,CAHpB;AAAA,IAII,WAAW,QAAQ,YAAR,CAJf;AAAA,IAKI,SAAS,QAAQ,UAAR,CALb;;AAOA;;;;;;;;;;;AAWA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,UAA7C,EAAyD,KAAzD,EAAgE;AAC9D,MAAI,WAAW,MAAf,EAAuB;AACrB;AACD;AACD,UAAQ,MAAR,EAAgB,UAAU,QAAV,EAAoB,GAApB,EAAyB;AACvC,QAAI,SAAS,QAAT,CAAJ,EAAwB;AACtB,gBAAU,QAAQ,IAAI,KAAJ,EAAlB;AACA,oBAAc,MAAd,EAAsB,MAAtB,EAA8B,GAA9B,EAAmC,QAAnC,EAA6C,SAA7C,EAAwD,UAAxD,EAAoE,KAApE;AACD,KAHD,MAGO;AACL,UAAI,WAAW,aAAa,WAAW,OAAO,GAAP,CAAX,EAAwB,QAAxB,EAAkC,MAAM,EAAxC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,KAA5D,CAAb,GAAkF,SAAjG;;AAEA,UAAI,aAAa,SAAjB,EAA4B;AAC1B,mBAAW,QAAX;AACD;AACD,uBAAiB,MAAjB,EAAyB,GAAzB,EAA8B,QAA9B;AACD;AACF,GAZD,EAYG,MAZH;AAaD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseMerge-compiled.js","sourcesContent":["'use strict';\n\nvar Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function (srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack());\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    } else {\n      var newValue = customizer ? customizer(object[key], srcValue, key + '', object, source, stack) : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;"]}