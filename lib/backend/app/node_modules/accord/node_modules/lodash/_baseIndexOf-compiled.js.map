{"version":3,"sources":["_baseIndexOf.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;AAAA,IAEI,gBAAgB,QAAQ,kBAAR,CAFpB;;AAIA;;;;;;;;;AASA,SAAS,WAAT,CAAqB,KAArB,EAA4B,KAA5B,EAAmC,SAAnC,EAA8C;AAC1C,WAAO,UAAU,KAAV,GAAkB,cAAc,KAAd,EAAqB,KAArB,EAA4B,SAA5B,CAAlB,GAA2D,cAAc,KAAd,EAAqB,SAArB,EAAgC,SAAhC,CAAlE;AACH;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_baseIndexOf-compiled.js","sourcesContent":["'use strict';\n\nvar baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;"]}