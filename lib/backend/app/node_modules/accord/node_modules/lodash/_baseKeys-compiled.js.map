{"version":3,"sources":["_baseKeys.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;;AAGA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;;;AAOA,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AACxB,MAAI,CAAC,YAAY,MAAZ,CAAL,EAA0B;AACxB,WAAO,WAAW,MAAX,CAAP;AACD;AACD,MAAI,SAAS,EAAb;AACA,OAAK,IAAI,GAAT,IAAgB,OAAO,MAAP,CAAhB,EAAgC;AAC9B,QAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,KAAoC,OAAO,aAA/C,EAA8D;AAC5D,aAAO,IAAP,CAAY,GAAZ;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"_baseKeys-compiled.js","sourcesContent":["'use strict';\n\nvar isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;"]}