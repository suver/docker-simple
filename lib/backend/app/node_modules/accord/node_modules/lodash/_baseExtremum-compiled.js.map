{"version":3,"sources":["_baseExtremum.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;;;;;;;;;;AAUA,SAAS,YAAT,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC,UAAvC,EAAmD;AACjD,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,MAAM,MADnB;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAZ;AAAA,QACI,UAAU,SAAS,KAAT,CADd;;AAGA,QAAI,WAAW,IAAX,KAAoB,aAAa,SAAb,GAAyB,YAAY,OAAZ,IAAuB,CAAC,SAAS,OAAT,CAAjD,GAAqE,WAAW,OAAX,EAAoB,QAApB,CAAzF,CAAJ,EAA6H;AAC3H,UAAI,WAAW,OAAf;AAAA,UACI,SAAS,KADb;AAED;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"_baseExtremum-compiled.js","sourcesContent":["'use strict';\n\nvar isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;"]}