{"version":3,"sources":["_baseKeysIn.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,YAAR,CAAf;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;AAAA,IAEI,eAAe,QAAQ,iBAAR,CAFnB;;AAIA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;;;AAOA,SAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,MAAI,CAAC,SAAS,MAAT,CAAL,EAAuB;AACrB,WAAO,aAAa,MAAb,CAAP;AACD;AACD,MAAI,UAAU,YAAY,MAAZ,CAAd;AAAA,MACI,SAAS,EADb;;AAGA,OAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,QAAI,EAAE,OAAO,aAAP,KAAyB,WAAW,CAAC,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CAArC,CAAF,CAAJ,EAA+E;AAC7E,aAAO,IAAP,CAAY,GAAZ;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_baseKeysIn-compiled.js","sourcesContent":["'use strict';\n\nvar isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;"]}