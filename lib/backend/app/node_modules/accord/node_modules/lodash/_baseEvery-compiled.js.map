{"version":3,"sources":["_baseEvery.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,aAAR,CAAf;;AAEA;;;;;;;;;AASA,SAAS,SAAT,CAAmB,UAAnB,EAA+B,SAA/B,EAA0C;AACxC,MAAI,SAAS,IAAb;AACA,WAAS,UAAT,EAAqB,UAAU,KAAV,EAAiB,KAAjB,EAAwB,UAAxB,EAAoC;AACvD,aAAS,CAAC,CAAC,UAAU,KAAV,EAAiB,KAAjB,EAAwB,UAAxB,CAAX;AACA,WAAO,MAAP;AACD,GAHD;AAIA,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseEvery-compiled.js","sourcesContent":["'use strict';\n\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function (value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;"]}