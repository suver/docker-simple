{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA;;AACA,CAAC,YAAY;AACX,MAAI,CAAJ,EAAO,eAAP,EAAwB,eAAxB,EAAyC,EAAzC,EAA6C,WAA7C,EAA0D,IAA1D,EAAgE,IAAhE,EAAsE,wBAAtE,EAAgG,eAAhG,EAAiH,IAAjH,EAAuH,OAAvH,EAAgI,mBAAhI,EAAqJ,MAArJ,EAA6J,QAA7J;;AAEA,SAAO,QAAQ,MAAR,CAAP;;AAEA,OAAK,QAAQ,IAAR,CAAL;;AAEA,SAAO,QAAQ,MAAR,CAAP;;AAEA,MAAI,QAAQ,QAAR,CAAJ;;AAEA,SAAO,QAAQ,MAAR,CAAP;;AAEA,YAAU,QAAQ,SAAR,CAAV;;AAEA,WAAS,QAAQ,QAAR,CAAT;;AAEA,UAAQ,QAAR,GAAmB,WAAW,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AACpD,WAAO,gBAAgB,IAAhB,CAAP;AACA,WAAO,CAAC,CAAC,KAAK,IAAL,CAAU,KAAK,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,EAAiC,IAAjC,CAAf,EAAuD,MAAhE;AACD,GAHD;;AAKA,UAAQ,IAAR,GAAe,UAAU,IAAV,EAAgB,WAAhB,EAA6B,WAA7B,EAA0C;AACvD,QAAI,YAAJ,EAAkB,WAAlB,EAA+B,OAA/B;AACA,WAAO,gBAAgB,IAAhB,CAAP;AACA,kBAAc,oBAAoB,IAApB,EAA0B,WAA1B,CAAd;AACA,cAAU,YAAY,WAAZ,CAAV;AACA,mBAAe,yBAAyB,IAAzB,EAA+B,OAA/B,CAAf;AACA,QAAI,CAAC,YAAL,EAAmB;AACjB,YAAM,IAAI,KAAJ,CAAU,OAAO,WAAP,GAAqB,OAArB,GAA+B,6BAAzC,CAAN;AACD;AACD,WAAO,KAAK,QAAQ,YAAR,CAAL,EAA4B,WAA5B,EAAyC,WAAzC,CAAP;AACD,GAVD;;AAYA,UAAQ,GAAR,GAAc,YAAY;AACxB,WAAO,KAAK,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,CAAL,CAAP;AACD,GAFD;;AAIA,oBAAkB,SAAS,eAAT,CAAyB,IAAzB,EAA+B,SAA/B,EAA0C;AAC1D,QAAI,SAAJ,EAAe,GAAf;AACA,gBAAY,CAAC,CAAC,UAAD,EAAa,QAAb,CAAD,EAAyB,CAAC,WAAD,EAAc,WAAd,CAAzB,EAAqD,CAAC,YAAD,EAAe,WAAf,CAArD,EAAkF,CAAC,aAAD,EAAgB,eAAhB,CAAlF,EAAoH,CAAC,UAAD,EAAa,UAAb,CAApH,EAA8I,CAAC,MAAD,EAAS,WAAT,CAA9I,EAAqK,CAAC,MAAD,EAAS,QAAT,CAArK,EAAyL,CAAC,aAAD,EAAgB,IAAhB,CAAzL,EAAgN,CAAC,KAAD,EAAQ,aAAR,CAAhN,EAAwO,CAAC,MAAD,EAAS,wBAAT,CAAxO,EAA4Q,CAAC,OAAD,EAAU,YAAV,CAA5Q,EAAqS,CAAC,YAAD,EAAe,qBAAf,CAArS,CAAZ;AACA,UAAM,IAAN;AACA,cAAU,OAAV,CAAkB,UAAU,CAAV,EAAa;AAC7B,UAAI,cAAc,MAAd,IAAwB,EAAE,CAAF,MAAS,IAArC,EAA2C;AACzC,cAAM,EAAE,CAAF,CAAN;AACD;AACD,UAAI,cAAc,OAAd,IAAyB,EAAE,CAAF,MAAS,IAAtC,EAA4C;AAC1C,eAAO,MAAM,EAAE,CAAF,CAAb;AACD;AACF,KAPD;AAQA,WAAO,OAAO,IAAd;AACD,GAbD;;AAeA,oBAAkB,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AAC/C,WAAO,gBAAgB,IAAhB,EAAsB,OAAtB,CAAP;AACD,GAFD;;AAIA,oBAAkB,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AAC/C,WAAO,gBAAgB,IAAhB,EAAsB,MAAtB,CAAP;AACD,GAFD;;AAIA,wBAAsB,SAAS,mBAAT,CAA6B,IAA7B,EAAmC,WAAnC,EAAgD;AACpE,QAAI,QAAJ;AACA,eAAW,eAAe,IAAf,GAAsB,QAAQ,IAAR,CAAa,gBAAgB,IAAhB,CAAb,EAAoC;AACnE,eAAS;AAD0D,KAApC,CAAtB,GAEN,QAAQ,OAAR,CAAgB,gBAAgB,IAAhB,CAAhB,CAFL;AAGA,WAAO,IAAP,EAAa;AACX,UAAI,aAAa,GAAjB,EAAsB;AACpB,cAAM,IAAI,KAAJ,CAAU,wCAAwC,IAAlD,CAAN;AACD;AACD,iBAAW,KAAK,OAAL,CAAa,QAAb,CAAX;AACA,UAAI,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,QAAV,EAAoB,cAApB,CAAd,CAAJ,EAAwD;AACtD,eAAO,QAAP;AACD;AACF;AACF,GAdD;;AAgBA,gBAAc,SAAS,WAAT,CAAqB,WAArB,EAAkC;AAC9C,QAAI,GAAJ,EAAS,KAAT;AACA,QAAI;AACF,aAAO,QAAQ,cAAc,eAAtB,EAAuC,OAA9C;AACD,KAFD,CAEE,OAAO,KAAP,EAAc;AACd,YAAM,KAAN;AACD;AACF,GAPD;;AASA,6BAA2B,SAAS,wBAAT,CAAkC,IAAlC,EAAwC,OAAxC,EAAiD;AAC1E,QAAI,OAAJ,EAAa,QAAb,EAAuB,CAAvB,EAA0B,GAA1B;AACA,eAAW,GAAG,WAAH,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,EAAiC,IAAjC,CAAf,CAAX;AACA,SAAK,IAAI,CAAJ,EAAO,MAAM,SAAS,MAA3B,EAAmC,IAAI,GAAvC,EAA4C,GAA5C,EAAiD;AAC/C,gBAAU,SAAS,CAAT,CAAV;AACA,gBAAU,QAAQ,OAAR,CAAgB,kBAAhB,EAAoC,EAApC,CAAV;AACA,UAAI,OAAO,SAAP,CAAiB,OAAjB,EAA0B,OAA1B,CAAJ,EAAwC;AACtC,eAAO,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,EAAiC,IAAjC,EAAuC,OAAvC,CAAP;AACD;AACF;AACF,GAVD;AAWD,CAjGD,EAiGG,IAjGH,CAiGQ,SAjGR","file":"index-compiled.js","sourcesContent":["'use strict';\n\n// Generated by CoffeeScript 1.10.0\n(function () {\n  var _, abstract_mapper, adapter_to_name, fs, get_version, glob, indx, match_version_to_adapter, name_to_adapter, path, resolve, resolve_engine_path, semver, supports;\n\n  path = require('path');\n\n  fs = require('fs');\n\n  glob = require('glob');\n\n  _ = require('lodash');\n\n  indx = require('indx');\n\n  resolve = require('resolve');\n\n  semver = require('semver');\n\n  exports.supports = supports = function supports(name) {\n    name = adapter_to_name(name);\n    return !!glob.sync(\"\" + path.join(__dirname, 'adapters', name)).length;\n  };\n\n  exports.load = function (name, custom_path, engine_name) {\n    var adapter_name, engine_path, version;\n    name = adapter_to_name(name);\n    engine_path = resolve_engine_path(name, custom_path);\n    version = get_version(engine_path);\n    adapter_name = match_version_to_adapter(name, version);\n    if (!adapter_name) {\n      throw new Error(name + \" version \" + version + \" is not currently supported\");\n    }\n    return new (require(adapter_name))(engine_name, engine_path);\n  };\n\n  exports.all = function () {\n    return indx(path.join(__dirname, 'adapters'));\n  };\n\n  abstract_mapper = function abstract_mapper(name, direction) {\n    var name_maps, res;\n    name_maps = [['markdown', 'marked'], ['minify-js', 'uglify-js'], ['minify-css', 'clean-css'], ['minify-html', 'html-minifier'], ['mustache', 'hogan.js'], ['scss', 'node-sass'], ['haml', 'hamljs'], ['escape-html', 'he'], ['jsx', 'react-tools'], ['cjsx', 'coffee-react-transform'], ['babel', 'babel-core'], ['typescript', 'typescript-compiler']];\n    res = null;\n    name_maps.forEach(function (n) {\n      if (direction === 'left' && n[0] === name) {\n        res = n[1];\n      }\n      if (direction === 'right' && n[1] === name) {\n        return res = n[0];\n      }\n    });\n    return res || name;\n  };\n\n  adapter_to_name = function adapter_to_name(name) {\n    return abstract_mapper(name, 'right');\n  };\n\n  name_to_adapter = function name_to_adapter(name) {\n    return abstract_mapper(name, 'left');\n  };\n\n  resolve_engine_path = function resolve_engine_path(name, custom_path) {\n    var filepath;\n    filepath = custom_path != null ? resolve.sync(name_to_adapter(name), {\n      basedir: custom_path\n    }) : require.resolve(name_to_adapter(name));\n    while (true) {\n      if (filepath === '/') {\n        throw new Error(\"cannot resolve root of node module \" + name);\n      }\n      filepath = path.dirname(filepath);\n      if (fs.existsSync(path.join(filepath, 'package.json'))) {\n        return filepath;\n      }\n    }\n  };\n\n  get_version = function get_version(engine_path) {\n    var err, error;\n    try {\n      return require(engine_path + '/package.json').version;\n    } catch (error) {\n      err = error;\n    }\n  };\n\n  match_version_to_adapter = function match_version_to_adapter(name, version) {\n    var adapter, adapters, i, len;\n    adapters = fs.readdirSync(path.join(__dirname, 'adapters', name));\n    for (i = 0, len = adapters.length; i < len; i++) {\n      adapter = adapters[i];\n      adapter = adapter.replace(/\\.(?:js|coffee)$/, '');\n      if (semver.satisfies(version, adapter)) {\n        return path.join(__dirname, 'adapters', name, adapter);\n      }\n    }\n  };\n}).call(undefined);"]}