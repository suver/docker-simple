{"version":3,"sources":["1.x.js"],"names":[],"mappings":"AAAA;;AAEA;;AACA,CAAC,YAAY;AACX,MAAI,OAAJ;AAAA,MACI,IADJ;AAAA,MAEI,CAFJ;AAAA,MAGI,OAHJ;AAAA,MAII,SAAS,SAAS,MAAT,CAAgB,KAAhB,EAAuB,MAAvB,EAA+B;AAC1C,SAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,UAAI,QAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,CAAJ,EAA+B,MAAM,GAAN,IAAa,OAAO,GAAP,CAAb;AAChC,cAAS,IAAT,GAAgB;AACf,WAAK,WAAL,GAAmB,KAAnB;AACD,UAAK,SAAL,GAAiB,OAAO,SAAxB,CAAkC,MAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB,CAA6B,MAAM,SAAN,GAAkB,OAAO,SAAzB,CAAmC,OAAO,KAAP;AACpG,GAVD;AAAA,MAWI,UAAU,GAAG,cAXjB;;AAaA,YAAU,QAAQ,oBAAR,CAAV;;AAEA,YAAU,QAAQ,oBAAR,CAAV;;AAEA,MAAI,QAAQ,MAAR,CAAJ;;AAEA,SAAO,UAAU,UAAV,EAAsB;AAC3B,QAAI,OAAJ;;AAEA,WAAO,IAAP,EAAa,UAAb;;AAEA,aAAS,IAAT,GAAgB;AACd,aAAO,KAAK,SAAL,CAAe,WAAf,CAA2B,KAA3B,CAAiC,IAAjC,EAAuC,SAAvC,CAAP;AACD;;AAED,SAAK,SAAL,CAAe,IAAf,GAAsB,MAAtB;;AAEA,SAAK,SAAL,CAAe,UAAf,GAA4B,CAAC,MAAD,EAAS,MAAT,CAA5B;;AAEA,SAAK,SAAL,CAAe,MAAf,GAAwB,KAAxB;;AAEA,SAAK,SAAL,CAAe,OAAf,GAAyB,UAAU,GAAV,EAAe,OAAf,EAAwB;AAC/C,cAAQ,MAAR,GAAiB,QAAQ,QAAzB;AACA,aAAO,QAAQ,QAAf;AACA,aAAO,QAAQ,QAAQ,SAAhB,EAA2B,UAAU,KAAV,EAAiB;AACjD,eAAO,YAAY;AACjB,iBAAO,MAAM,MAAN,CAAa,GAAb,EAAkB,OAAlB,CAAP;AACD,SAFD;AAGD,OAJiC,CAIhC,IAJgC,CAA3B,CAAP;AAKD,KARD;;AAUA,cAAU,SAAS,OAAT,CAAiB,SAAjB,EAA4B,EAA5B,EAAgC;AACxC,UAAI,IAAJ,EAAU,GAAV,EAAe,KAAf,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC;AACA,UAAI;AACF,cAAM,IAAN;AACD,OAFD,CAEE,OAAO,KAAP,EAAc;AACd,cAAM,KAAN;AACA,eAAO,EAAE,MAAF,CAAS,GAAT,CAAP;AACD;AACD,aAAO;AACL,gBAAQ;AADH,OAAP;AAGA,UAAI,SAAJ,EAAe;AACb,cAAM,QAAQ,UAAR,CAAmB,GAAnB,EAAwB,SAA9B;AACA,cAAM,QAAQ,cAAR,CAAuB,GAAvB,CAAN;AACA,eAAO;AACL,kBAAQ,GADH;AAEL,qBAAW;AAFN,SAAP;AAID;AACD,aAAO,EAAE,OAAF,CAAU,IAAV,CAAP;AACD,KApBD;;AAsBA,WAAO,IAAP;AACD,GAhDM,CAgDL,OAhDK,CAAP;;AAkDA,SAAO,OAAP,GAAiB,IAAjB;AACD,CAvED,EAuEG,IAvEH,CAuEQ,SAvER","file":"1.x-compiled.js","sourcesContent":["'use strict';\n\n// Generated by CoffeeScript 1.10.0\n(function () {\n  var Adapter,\n      Myth,\n      W,\n      convert,\n      extend = function extend(child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }function ctor() {\n      this.constructor = child;\n    }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  Adapter = require('../../adapter_base');\n\n  convert = require('convert-source-map');\n\n  W = require('when');\n\n  Myth = function (superClass) {\n    var compile;\n\n    extend(Myth, superClass);\n\n    function Myth() {\n      return Myth.__super__.constructor.apply(this, arguments);\n    }\n\n    Myth.prototype.name = 'myth';\n\n    Myth.prototype.extensions = ['myth', 'mcss'];\n\n    Myth.prototype.output = 'css';\n\n    Myth.prototype._render = function (str, options) {\n      options.source = options.filename;\n      delete options.filename;\n      return compile(options.sourcemap, function (_this) {\n        return function () {\n          return _this.engine(str, options);\n        };\n      }(this));\n    };\n\n    compile = function compile(sourcemap, fn) {\n      var data, err, error, map, res, src;\n      try {\n        res = fn();\n      } catch (error) {\n        err = error;\n        return W.reject(err);\n      }\n      data = {\n        result: res\n      };\n      if (sourcemap) {\n        map = convert.fromSource(res).sourcemap;\n        src = convert.removeComments(res);\n        data = {\n          result: src,\n          sourcemap: map\n        };\n      }\n      return W.resolve(data);\n    };\n\n    return Myth;\n  }(Adapter);\n\n  module.exports = Myth;\n}).call(undefined);"]}