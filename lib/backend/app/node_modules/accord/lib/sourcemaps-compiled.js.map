{"version":3,"sources":["sourcemaps.js"],"names":[],"mappings":"AAAA;;AAEA;;AACA,CAAC,YAAY;AACX,MAAI,CAAJ,EAAO,EAAP,EAAW,IAAX;;AAEA,MAAI,QAAQ,MAAR,CAAJ;;AAEA,SAAO,QAAQ,WAAR,CAAP;;AAEA,OAAK,QAAQ,IAAR,CAAL;;AAEA;;;;;;;;AAQA,UAAQ,cAAR,GAAyB,UAAU,GAAV,EAAe;AACtC,QAAI,IAAI,cAAR,EAAwB;AACtB,aAAO,EAAE,OAAF,CAAU,GAAV,CAAP;AACD;AACD,WAAO,EAAE,GAAF,CAAM,IAAI,OAAV,EAAmB,UAAU,MAAV,EAAkB;AAC1C,aAAO,KAAK,IAAL,CAAU,GAAG,QAAH,CAAY,IAAZ,CAAiB,EAAjB,CAAV,EAAgC,MAAhC,EAAwC,MAAxC,CAAP;AACD,KAFM,EAEJ,IAFI,CAEC,UAAU,QAAV,EAAoB;AAC1B,UAAI,cAAJ,GAAqB,QAArB;AACA,aAAO,GAAP;AACD,KALM,EAKJ,OALI,EAKK,YAAY;AACtB,aAAO,GAAP;AACD,KAPM,CAAP;AAQD,GAZD;AAaD,CA9BD,EA8BG,IA9BH,CA8BQ,SA9BR","file":"sourcemaps-compiled.js","sourcesContent":["'use strict';\n\n// Generated by CoffeeScript 1.10.0\n(function () {\n  var W, fs, node;\n\n  W = require('when');\n\n  node = require('when/node');\n\n  fs = require('fs');\n\n  /**\n   * Reads a source map's sources and inlines them in the `sourcesContents` key,\n   * returning the full map.\n   *\n   * @param  {Object} map - source map v3\n   * @return {Promise} a promise for the sourcemap updated with contents\n   */\n\n  exports.inline_sources = function (map) {\n    if (map.sourcesContent) {\n      return W.resolve(map);\n    }\n    return W.map(map.sources, function (source) {\n      return node.call(fs.readFile.bind(fs), source, 'utf8');\n    }).then(function (contents) {\n      map.sourcesContent = contents;\n      return map;\n    })[\"catch\"](function () {\n      return map;\n    });\n  };\n}).call(undefined);"]}